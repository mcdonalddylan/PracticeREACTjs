[{"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\index.js":"1","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\reportWebVitals.js":"2","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\App.js":"3","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\SignIn.js":"4","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\ChatRoom.js":"5","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\SignOut.js":"6","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\ChatMessage.js":"7","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\NavBar.js":"8","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\AddMessage.js":"9","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\test.js":"10","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\reducers\\rootReducer.js":"11","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\reducers\\wordReducer.js":"12","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\actions\\wordAction.js":"13","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\BannedWord.js":"14"},{"size":845,"mtime":1614119726734,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1934,"mtime":1612988520943,"results":"18","hashOfConfig":"16"},{"size":400,"mtime":1612906382371,"results":"19","hashOfConfig":"16"},{"size":787,"mtime":1612902328522,"results":"20","hashOfConfig":"16"},{"size":209,"mtime":1612474514181,"results":"21","hashOfConfig":"16"},{"size":950,"mtime":1614367415213,"results":"22","hashOfConfig":"16"},{"size":1997,"mtime":1614277485459,"results":"23","hashOfConfig":"16"},{"size":2548,"mtime":1614368441023,"results":"24","hashOfConfig":"16"},{"size":1883,"mtime":1612559626638,"results":"25","hashOfConfig":"16"},{"size":165,"mtime":1614107970268,"results":"26","hashOfConfig":"16"},{"size":212,"mtime":1614107169329,"results":"27","hashOfConfig":"16"},{"size":113,"mtime":1614119584369,"results":"28","hashOfConfig":"16"},{"size":1925,"mtime":1614277452155,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4v3t3i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\index.js",[],["63","64"],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\reportWebVitals.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\App.js",["65"],"import './App.css';\n\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth'; //user authentication\nimport \"firebase/database\"; //database setup\n\n//firebase react hooks\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport { ChatRoom } from './components/ChatRoom';\nimport { SignIn } from './components/SignIn';\nimport { NavBar } from './components/NavBar';\nimport {useRef} from \"react\";\nimport { AddMessage } from './components/AddMessage';\nimport LikeDislike from './components/test';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCv_S4IAmiRP8acLbt7payddnvvOtP8brw\",\n  authDomain: \"dontsaywordapp.firebaseapp.com\",\n  projectId: \"dontsaywordapp\",\n  storageBucket: \"dontsaywordapp.appspot.com\",\n  messagingSenderId: \"281172738034\",\n  appId: \"1:281172738034:web:73e406475549a94980b56b\",\n  measurementId: \"G-V52QBF62FW\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n//const db = firebase.database();\n\nfunction App() {\n\n  //this hook will return an object full of user data if they are signed in,\n  // otherwise the object is null\n  const [user] = useAuthState(auth);\n  const dummy = useRef();\n\n  return (\n    <div className=\"App\">\n      \n      <header>  \n        <NavBar firestore={firestore} auth={auth} user={user}/>\n      </header>\n      {/* <div className=\"gradDown\"></div> */}\n      <section>\n        <div className=\"container\">\n          {\n          user ? \n            <>\n              <ChatRoom auth={auth} firebase={firebase} \n              firestore={firestore} dummy={dummy}/>\n            </>\n            :\n            <SignIn auth={auth}/>\n          }\n        </div>\n      </section>\n      <footer>\n        {user != null ? \n        \n          <AddMessage auth={auth} firestore={firestore} \n            firebase={firebase} dummy={dummy}/> \n          \n          :\n          \n          <></>}\n          \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\SignIn.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\ChatRoom.js",["66"],"import {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport {ChatMessage} from './ChatMessage';\r\n\r\n\r\nexport const ChatRoom = (props) => {\r\n    \r\n    \r\n    const messageRef = props.firestore.collection(\"messages\");\r\n    const query = messageRef.orderBy(\"timePosted\").limit(25);\r\n\r\n    const [messages] = useCollectionData(query, {idField: \"id\"});\r\n\r\n    return(\r\n        <div className=\"chatBox\">\r\n            {messages != undefined ? \r\n            \r\n                messages && messages.map(singleMsg =>\r\n                    <ChatMessage key={singleMsg.id} message={singleMsg} />\r\n                )\r\n\r\n                \r\n            :\r\n                <p>ERROR: Cannot revieve messages from firebase.</p>}\r\n            <div ref={props.dummy}></div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\SignOut.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\ChatMessage.js",["67","68"],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\NavBar.js",["69","70","71","72"],"import { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport {SignOut} from \"./SignOut\";\r\nimport { useList } from \"react-firebase-hooks/database\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setWord } from \"../actions/wordAction\";\r\nimport { BannedWord } from \"./BannedWord\";\r\n\r\nexport const NavBar = (props) => {\r\n\r\n    const loading = useRef(false);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(()=>{\r\n        if (props.user != null && loading.current == false) \r\n        {\r\n            fetchWord();\r\n        }\r\n        \r\n    });\r\n\r\n    const fetchWord = async () => {\r\n\r\n        const collectionRef = props.firestore.collection(\"word\");\r\n        loading.current = true;\r\n        const data = await collectionRef.get();\r\n        loading.current = false;\r\n\r\n        if (data != undefined)\r\n        {\r\n            //console.log(\"word data found\");\r\n            data.docs.forEach(item=>{\r\n\r\n                //console.log(item.data().word);\r\n                dispatch(setWord(item.data().word));\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <> \r\n        <div className=\"navBar\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <SignOut className=\"col-2\" auth={props.auth}/>\r\n                    <h3 className=\"col-4\" style={{textAlign:\"right\"}}>Don't say:</h3>\r\n                    {props.user != null ? \r\n                        !loading.current ? \r\n                            //place bannedWord component here which allows you to view and edit the word\r\n                            <BannedWord firestore={props.firestore}/>\r\n                        :\r\n                            <p>Loading....</p>\r\n                    :\r\n                        <h3>???BANNED WORD???</h3>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\AddMessage.js",["73"],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\test.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\reducers\\rootReducer.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\reducers\\wordReducer.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\actions\\wordAction.js",[],"C:\\Users\\bgdyl\\Desktop\\Personal Projects\\PracticeREACTjs\\src\\components\\BannedWord.js",["74"],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setWord } from \"../actions/wordAction\";\r\n\r\nexport const BannedWord = (props) => {\r\n\r\n    const displayWord = useSelector(state => state.word); //gets the word from the redux store (love this hook btw)\r\n    const [selected, setSelected] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitWord = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newWord = event.currentTarget[\"word\"].value;\r\n\r\n        if (newWord.length > 2 && newWord.length < 16)\r\n        {\r\n            //change word in firebase\r\n            changeWord(newWord);\r\n        }\r\n        else\r\n        {\r\n            alert(\"The word MUST be at least 3 and no more than 15 characters long.\");\r\n            setSelected(!selected);\r\n        }\r\n        \r\n    }\r\n\r\n    const changeWord = async (newWord) => {\r\n\r\n        const collectionRef = props.firestore.collection(\"word\");\r\n        const data = await collectionRef.get();\r\n\r\n        let idVal = \"\";\r\n        if (data != undefined)\r\n        {\r\n            //console.log(\"word data found\");\r\n            data.docs.forEach(item=>{\r\n\r\n                idVal = item.id;\r\n            });\r\n\r\n            collectionRef.doc(idVal).update({\r\n                word: newWord,\r\n            });\r\n            dispatch(setWord(newWord));\r\n        }\r\n\r\n        setSelected(!selected);\r\n    }\r\n\r\n    return(\r\n        selected ?\r\n            <form onSubmit={submitWord}>\r\n                <input className=\"col-8\" style={{textAlign:\"left\"}}\r\n                type=\"text\" placeholder={displayWord} name=\"word\"/>\r\n                <button className=\"col-3\"\r\n                type=\"submit\">change</button>\r\n            </form>\r\n            :\r\n            <h3 className=\"col-4\" style={{textAlign:\"left\"}} onClick={()=>setSelected(!selected)}>\r\n                {displayWord}\r\n            </h3>\r\n    );\r\n}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":15,"column":8,"nodeType":"81","messageId":"82","endLine":15,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":15,"column":23,"nodeType":"85","messageId":"86","endLine":15,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":3,"column":18,"nodeType":"81","messageId":"82","endLine":3,"endColumn":21},{"ruleId":"79","severity":1,"message":"88","line":3,"column":33,"nodeType":"81","messageId":"82","endLine":3,"endColumn":43},{"ruleId":"79","severity":1,"message":"89","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":27},{"ruleId":"79","severity":1,"message":"90","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":17},{"ruleId":"83","severity":1,"message":"91","line":15,"column":51,"nodeType":"85","messageId":"86","endLine":15,"endColumn":53},{"ruleId":"83","severity":1,"message":"84","line":29,"column":18,"nodeType":"85","messageId":"86","endLine":29,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":10,"column":46,"nodeType":"85","messageId":"86","endLine":10,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":35,"column":18,"nodeType":"85","messageId":"86","endLine":35,"endColumn":20},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'LikeDislike' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'uid' is assigned a value but never used.","'timePosted' is assigned a value but never used.","'useCollectionData' is defined but never used.","'useList' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]